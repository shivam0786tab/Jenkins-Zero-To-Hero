@Library("my-shared-library") _
pipeline {
  agent {
    docker {
      image baseImage()
      args dockerSockMount() // mount Docker socket to access the host's Docker daemon
    }
  }
  stages {
    stage('Checkout') {
      steps {
        sh 'echo passed'
        // git branch: 'main', url: 'https://github.com/shivam0786tab/Jenkins-Zero-To-Hero.git', credentialsId: 'git-cred-id'
      }
    }
    stage('Build and Test') {
      steps {
        // sh 'ls -ltr'
        // build the project and create a JAR file
        sh 'apt-get install -y jq && cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean package'
      }
    }
    stage('Static Code Analysis') {
      environment {
        SONAR_URL = "http://54.196.206.67:9000"
      }
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
        }
      }
    }
	
	stage('Docker Login') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'docker-cred-id', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    sh 'echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin'
                }
            }
    }
	
	stage('Determine Image Tag') {
            steps {
                script {
                    def latestTag = sh(
                        script: "curl -s https://hub.docker.com/v2/repositories/shiv0786/web-app/tags?page_size=1 | jq -r '.results[0].name'",
                        returnStdout: true
                    ).trim()

                    def nextTag
					try {
						nextTag = latestTag.toInteger() + 1
					} catch (e) {
						nextTag = 1
					}
					env.IMAGE_TAG = "${nextTag}"

                    echo "ðŸ”– Using image tag: ${env.IMAGE_TAG}"
                }
            }
    }
	stage('Build Docker Image') {
            steps {
                script {
                    sh """
                    echo 'Building Docker Image...'
                    cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && docker build -t shiv0786/web-app:${env.IMAGE_TAG} .
                    """
                }
            }
        }

    stage('Push Docker Image') {
            steps {
                script {
                    sh """
                    echo 'Pushing Docker Image to Docker Hub...'
                    docker push shiv0786/web-app:${env.IMAGE_TAG}
                    """
                }
            }
    }
	stage('Update K8s Manifest and Push') {
            steps {
                script {
                     withCredentials([usernamePassword(credentialsId: 'git-cred-id', usernameVariable: 'GIT_USERNAME', passwordVariable: 'GIT_PASSWORD')]) {
                sh """
                echo "Updating K8s deployment YAML..."
                cat java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml

                # Replace image tag in a more generic way
                sed -i "s|image: shiv0786/web-app:.*|image: shiv0786/web-app:${env.IMAGE_TAG}|g" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml

                cat java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml

                # Git config
                git config --global user.name "$GIT_USERNAME"
                git config --global user.email "test@email.com"
				git config --global --add safe.directory /var/lib/jenkins/workspace/ultimate-cicd

                # Set remote using credentials securely
                git remote set-url origin https://$GIT_USERNAME:$GIT_PASSWORD@github.com/shivam0786tab/Jenkins-Zero-To-Hero.git
				git checkout main
                # Commit and push
                git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                git commit -m "Updated image tag to ${env.IMAGE_TAG} | Jenkins Pipeline" || echo "No changes to commit"
				git pull --rebase origin main
                git push origin main
                """
            }
        }
    }
}
  }
}
